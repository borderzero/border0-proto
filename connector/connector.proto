syntax = "proto3";

option go_package = "github.com/borderzero/border0-proto/connector";
package border0.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";


service ConnectorService {
  rpc ControlStream(stream ControlStreamRequest) returns (stream ControlStreamReponse);
}

message ControlStreamRequest {
  oneof RequestType {
    Config config = 1;
    Heartbeat heartbeat = 2;
    PluginDiscoveryResults plugin_discovery_results = 3;
    TunnelCertificateSignRequest tunnel_certificate_sign_request = 5;
  }
}

message ControlStreamReponse {
  oneof RequestType {
    Init init = 1;
    ConnectorConfig connector_config = 2;
    UpdateConfig update_config = 3;
    TunnelCertificateSignResponse tunnel_certificate_sign_response = 5;
    Discover discover = 6;
    Stop stop = 7;
  }
}

message Organization {
  string id = 1;
  string name = 2;
  string subdomain = 3;
  google.protobuf.Struct certificates = 4;
}

message TunnelCertificateSignRequest {
  string request_id = 1;
  string socket_id = 2;
  string public_key = 3;
}

message TunnelCertificateSignResponse {
  string request_id = 1;
  string certificate = 2;
  string hostkey = 3;
}

message Init {
  ConnectorConfig connector_config = 1;
  repeated SocketConfig sockets = 2;
  repeated PluginConfig plugins = 3;
}

message UpdateConfig {
  Action action = 1;
  oneof ConfigType {
    PluginConfig plugin_config = 2;
    SocketConfig socket_config = 3;
  }
}

enum Action {
    CREATE = 0;
    UPDATE = 1;
    DELETE = 2;
    OTHER = 3;
}

message Config {
  bool connector = 1;
  bool sockets = 2;
  bool plugins = 3;
}

message Heartbeat {
  string version = 1;
}

message PluginDiscoveryResults {
  string plugin_id = 1;
  google.protobuf.Timestamp disovery_started = 2;
  google.protobuf.Timestamp disovery_completed = 3;
  repeated PluginDiscoveryResult results = 4;
}

message PluginDiscoveryResult {
  string request_id = 1;
  string id = 2;
  string name = 3;
  string type = 4;
  string target = 5;
  int32 port = 6;
  string upstream_type = 7;
  string upstream_address = 8; 
  repeated Tag tags = 9;
}

message Tag {
  string key = 1;
  string value = 2;
}

message SocketConfig {
  string id = 1;
  string name = 2;
  string type = 3;
  string target = 4;
  int32 port = 5;
  string upstream_type = 6;
  string upstream_address = 7; 
  string upstream_username = 8;
  string upstream_password = 9;
  string upstream_identity_file = 10;
  string upstream_certificate_file = 11;
  string upstream_key_file = 12;
  string upstream_ca_file = 13;
  bool upstream_tls = 14;
  bool rds_iam_auth = 15;
  string aws_region = 16;
  bool cloudsql_connectior = 17;
  bool cloudsql_iam_auth = 18;
  string google_credentials_file = 19;
  bool ssh_server = 20;
  UpstreamEcsConfig upstream_ecs_config = 21;
}

message UpstreamEcsConfig {
  string cluster_name = 1;
  string service_filter = 2;
  string task_filter= 3;
  string container_filter = 4;
}


message ConnectorConfig {
 string name = 1;
 int32 heartbeat_interval = 2;
 Organization organization = 3;
}

message PluginConfig {
  string id = 1;
  string name = 2;
  string type = 3;
  google.protobuf.Struct config = 4;
}

message Discover {
  string id = 1;
  string request_id = 2;
}

message Stop {
  string id = 1;
}