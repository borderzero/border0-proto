//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: connector.proto

package border0.v1;

@kotlin.jvm.JvmName("-initializecontrolStreamRequest")
public inline fun controlStreamRequest(block: border0.v1.ControlStreamRequestKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.ControlStreamRequest =
  border0.v1.ControlStreamRequestKt.Dsl._create(border0.v1.Connector.ControlStreamRequest.newBuilder()).apply { block() }._build()
public object ControlStreamRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: border0.v1.Connector.ControlStreamRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: border0.v1.Connector.ControlStreamRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): border0.v1.Connector.ControlStreamRequest = _builder.build()

    /**
     * <code>.border0.v1.Config config = 1;</code>
     */
    public var config: border0.v1.Connector.Config
      @JvmName("getConfig")
      get() = _builder.getConfig()
      @JvmName("setConfig")
      set(value) {
        _builder.setConfig(value)
      }
    /**
     * <code>.border0.v1.Config config = 1;</code>
     */
    public fun clearConfig() {
      _builder.clearConfig()
    }
    /**
     * <code>.border0.v1.Config config = 1;</code>
     * @return Whether the config field is set.
     */
    public fun hasConfig(): kotlin.Boolean {
      return _builder.hasConfig()
    }

    /**
     * <code>.border0.common.v1.HeartbeatMessage heartbeat = 2;</code>
     */
    public var heartbeat: border0.common.v1.Messages.HeartbeatMessage
      @JvmName("getHeartbeat")
      get() = _builder.getHeartbeat()
      @JvmName("setHeartbeat")
      set(value) {
        _builder.setHeartbeat(value)
      }
    /**
     * <code>.border0.common.v1.HeartbeatMessage heartbeat = 2;</code>
     */
    public fun clearHeartbeat() {
      _builder.clearHeartbeat()
    }
    /**
     * <code>.border0.common.v1.HeartbeatMessage heartbeat = 2;</code>
     * @return Whether the heartbeat field is set.
     */
    public fun hasHeartbeat(): kotlin.Boolean {
      return _builder.hasHeartbeat()
    }

    /**
     * <code>.border0.v1.PluginDiscoveryResults plugin_discovery_results = 3;</code>
     */
    public var pluginDiscoveryResults: border0.v1.Connector.PluginDiscoveryResults
      @JvmName("getPluginDiscoveryResults")
      get() = _builder.getPluginDiscoveryResults()
      @JvmName("setPluginDiscoveryResults")
      set(value) {
        _builder.setPluginDiscoveryResults(value)
      }
    /**
     * <code>.border0.v1.PluginDiscoveryResults plugin_discovery_results = 3;</code>
     */
    public fun clearPluginDiscoveryResults() {
      _builder.clearPluginDiscoveryResults()
    }
    /**
     * <code>.border0.v1.PluginDiscoveryResults plugin_discovery_results = 3;</code>
     * @return Whether the pluginDiscoveryResults field is set.
     */
    public fun hasPluginDiscoveryResults(): kotlin.Boolean {
      return _builder.hasPluginDiscoveryResults()
    }

    /**
     * <code>.border0.v1.TunnelCertificateSignRequest tunnel_certificate_sign_request = 5;</code>
     */
    public var tunnelCertificateSignRequest: border0.v1.Connector.TunnelCertificateSignRequest
      @JvmName("getTunnelCertificateSignRequest")
      get() = _builder.getTunnelCertificateSignRequest()
      @JvmName("setTunnelCertificateSignRequest")
      set(value) {
        _builder.setTunnelCertificateSignRequest(value)
      }
    /**
     * <code>.border0.v1.TunnelCertificateSignRequest tunnel_certificate_sign_request = 5;</code>
     */
    public fun clearTunnelCertificateSignRequest() {
      _builder.clearTunnelCertificateSignRequest()
    }
    /**
     * <code>.border0.v1.TunnelCertificateSignRequest tunnel_certificate_sign_request = 5;</code>
     * @return Whether the tunnelCertificateSignRequest field is set.
     */
    public fun hasTunnelCertificateSignRequest(): kotlin.Boolean {
      return _builder.hasTunnelCertificateSignRequest()
    }

    /**
     * <code>.border0.v1.Log log = 6;</code>
     */
    public var log: border0.v1.Connector.Log
      @JvmName("getLog")
      get() = _builder.getLog()
      @JvmName("setLog")
      set(value) {
        _builder.setLog(value)
      }
    /**
     * <code>.border0.v1.Log log = 6;</code>
     */
    public fun clearLog() {
      _builder.clearLog()
    }
    /**
     * <code>.border0.v1.Log log = 6;</code>
     * @return Whether the log field is set.
     */
    public fun hasLog(): kotlin.Boolean {
      return _builder.hasLog()
    }

    /**
     * <code>.border0.v1.ConnectorMetadata metadata = 7;</code>
     */
    public var metadata: border0.v1.Connector.ConnectorMetadata
      @JvmName("getMetadata")
      get() = _builder.getMetadata()
      @JvmName("setMetadata")
      set(value) {
        _builder.setMetadata(value)
      }
    /**
     * <code>.border0.v1.ConnectorMetadata metadata = 7;</code>
     */
    public fun clearMetadata() {
      _builder.clearMetadata()
    }
    /**
     * <code>.border0.v1.ConnectorMetadata metadata = 7;</code>
     * @return Whether the metadata field is set.
     */
    public fun hasMetadata(): kotlin.Boolean {
      return _builder.hasMetadata()
    }

    /**
     * <code>.border0.v1.AuthorizeRequest authorize = 8;</code>
     */
    public var authorize: border0.v1.Connector.AuthorizeRequest
      @JvmName("getAuthorize")
      get() = _builder.getAuthorize()
      @JvmName("setAuthorize")
      set(value) {
        _builder.setAuthorize(value)
      }
    /**
     * <code>.border0.v1.AuthorizeRequest authorize = 8;</code>
     */
    public fun clearAuthorize() {
      _builder.clearAuthorize()
    }
    /**
     * <code>.border0.v1.AuthorizeRequest authorize = 8;</code>
     * @return Whether the authorize field is set.
     */
    public fun hasAuthorize(): kotlin.Boolean {
      return _builder.hasAuthorize()
    }

    /**
     * <code>.border0.v1.SessionUpdateRequest session_update = 9;</code>
     */
    public var sessionUpdate: border0.v1.Connector.SessionUpdateRequest
      @JvmName("getSessionUpdate")
      get() = _builder.getSessionUpdate()
      @JvmName("setSessionUpdate")
      set(value) {
        _builder.setSessionUpdate(value)
      }
    /**
     * <code>.border0.v1.SessionUpdateRequest session_update = 9;</code>
     */
    public fun clearSessionUpdate() {
      _builder.clearSessionUpdate()
    }
    /**
     * <code>.border0.v1.SessionUpdateRequest session_update = 9;</code>
     * @return Whether the sessionUpdate field is set.
     */
    public fun hasSessionUpdate(): kotlin.Boolean {
      return _builder.hasSessionUpdate()
    }

    /**
     * <code>.border0.v1.SshCertificateSignRequest ssh_certificate_sign_request = 10;</code>
     */
    public var sshCertificateSignRequest: border0.v1.Connector.SshCertificateSignRequest
      @JvmName("getSshCertificateSignRequest")
      get() = _builder.getSshCertificateSignRequest()
      @JvmName("setSshCertificateSignRequest")
      set(value) {
        _builder.setSshCertificateSignRequest(value)
      }
    /**
     * <code>.border0.v1.SshCertificateSignRequest ssh_certificate_sign_request = 10;</code>
     */
    public fun clearSshCertificateSignRequest() {
      _builder.clearSshCertificateSignRequest()
    }
    /**
     * <code>.border0.v1.SshCertificateSignRequest ssh_certificate_sign_request = 10;</code>
     * @return Whether the sshCertificateSignRequest field is set.
     */
    public fun hasSshCertificateSignRequest(): kotlin.Boolean {
      return _builder.hasSshCertificateSignRequest()
    }

    /**
     * <code>.border0.v1.UploadRecording upload_recording = 11;</code>
     */
    public var uploadRecording: border0.v1.Connector.UploadRecording
      @JvmName("getUploadRecording")
      get() = _builder.getUploadRecording()
      @JvmName("setUploadRecording")
      set(value) {
        _builder.setUploadRecording(value)
      }
    /**
     * <code>.border0.v1.UploadRecording upload_recording = 11;</code>
     */
    public fun clearUploadRecording() {
      _builder.clearUploadRecording()
    }
    /**
     * <code>.border0.v1.UploadRecording upload_recording = 11;</code>
     * @return Whether the uploadRecording field is set.
     */
    public fun hasUploadRecording(): kotlin.Boolean {
      return _builder.hasUploadRecording()
    }

    /**
     * <code>.border0.v1.CertificateSignRequest Certificate_sign_request = 12;</code>
     */
    public var certificateSignRequest: border0.v1.Connector.CertificateSignRequest
      @JvmName("getCertificateSignRequest")
      get() = _builder.getCertificateSignRequest()
      @JvmName("setCertificateSignRequest")
      set(value) {
        _builder.setCertificateSignRequest(value)
      }
    /**
     * <code>.border0.v1.CertificateSignRequest Certificate_sign_request = 12;</code>
     */
    public fun clearCertificateSignRequest() {
      _builder.clearCertificateSignRequest()
    }
    /**
     * <code>.border0.v1.CertificateSignRequest Certificate_sign_request = 12;</code>
     * @return Whether the certificateSignRequest field is set.
     */
    public fun hasCertificateSignRequest(): kotlin.Boolean {
      return _builder.hasCertificateSignRequest()
    }

    /**
     * <code>.border0.v1.SessionEvent session_event = 13;</code>
     */
    public var sessionEvent: border0.v1.Connector.SessionEvent
      @JvmName("getSessionEvent")
      get() = _builder.getSessionEvent()
      @JvmName("setSessionEvent")
      set(value) {
        _builder.setSessionEvent(value)
      }
    /**
     * <code>.border0.v1.SessionEvent session_event = 13;</code>
     */
    public fun clearSessionEvent() {
      _builder.clearSessionEvent()
    }
    /**
     * <code>.border0.v1.SessionEvent session_event = 13;</code>
     * @return Whether the sessionEvent field is set.
     */
    public fun hasSessionEvent(): kotlin.Boolean {
      return _builder.hasSessionEvent()
    }

    /**
     * <code>.border0.common.v1.DiscoveryDetailsMessage discovery_details = 14;</code>
     */
    public var discoveryDetails: border0.common.v1.Messages.DiscoveryDetailsMessage
      @JvmName("getDiscoveryDetails")
      get() = _builder.getDiscoveryDetails()
      @JvmName("setDiscoveryDetails")
      set(value) {
        _builder.setDiscoveryDetails(value)
      }
    /**
     * <code>.border0.common.v1.DiscoveryDetailsMessage discovery_details = 14;</code>
     */
    public fun clearDiscoveryDetails() {
      _builder.clearDiscoveryDetails()
    }
    /**
     * <code>.border0.common.v1.DiscoveryDetailsMessage discovery_details = 14;</code>
     * @return Whether the discoveryDetails field is set.
     */
    public fun hasDiscoveryDetails(): kotlin.Boolean {
      return _builder.hasDiscoveryDetails()
    }

    /**
     * <code>.border0.v1.AuthorizePeerRequest authorize_peer = 15;</code>
     */
    public var authorizePeer: border0.v1.Connector.AuthorizePeerRequest
      @JvmName("getAuthorizePeer")
      get() = _builder.getAuthorizePeer()
      @JvmName("setAuthorizePeer")
      set(value) {
        _builder.setAuthorizePeer(value)
      }
    /**
     * <code>.border0.v1.AuthorizePeerRequest authorize_peer = 15;</code>
     */
    public fun clearAuthorizePeer() {
      _builder.clearAuthorizePeer()
    }
    /**
     * <code>.border0.v1.AuthorizePeerRequest authorize_peer = 15;</code>
     * @return Whether the authorizePeer field is set.
     */
    public fun hasAuthorizePeer(): kotlin.Boolean {
      return _builder.hasAuthorizePeer()
    }

    /**
     * <code>.border0.v1.SessionRequest session = 16;</code>
     */
    public var session: border0.v1.Connector.SessionRequest
      @JvmName("getSession")
      get() = _builder.getSession()
      @JvmName("setSession")
      set(value) {
        _builder.setSession(value)
      }
    /**
     * <code>.border0.v1.SessionRequest session = 16;</code>
     */
    public fun clearSession() {
      _builder.clearSession()
    }
    /**
     * <code>.border0.v1.SessionRequest session = 16;</code>
     * @return Whether the session field is set.
     */
    public fun hasSession(): kotlin.Boolean {
      return _builder.hasSession()
    }

    /**
     * <code>.border0.common.v1.StatsMessage stats = 17;</code>
     */
    public var stats: border0.common.v1.Messages.StatsMessage
      @JvmName("getStats")
      get() = _builder.getStats()
      @JvmName("setStats")
      set(value) {
        _builder.setStats(value)
      }
    /**
     * <code>.border0.common.v1.StatsMessage stats = 17;</code>
     */
    public fun clearStats() {
      _builder.clearStats()
    }
    /**
     * <code>.border0.common.v1.StatsMessage stats = 17;</code>
     * @return Whether the stats field is set.
     */
    public fun hasStats(): kotlin.Boolean {
      return _builder.hasStats()
    }

    /**
     * <code>.border0.v1.Logs logs = 18;</code>
     */
    public var logs: border0.v1.Connector.Logs
      @JvmName("getLogs")
      get() = _builder.getLogs()
      @JvmName("setLogs")
      set(value) {
        _builder.setLogs(value)
      }
    /**
     * <code>.border0.v1.Logs logs = 18;</code>
     */
    public fun clearLogs() {
      _builder.clearLogs()
    }
    /**
     * <code>.border0.v1.Logs logs = 18;</code>
     * @return Whether the logs field is set.
     */
    public fun hasLogs(): kotlin.Boolean {
      return _builder.hasLogs()
    }
    public val requestTypeCase: border0.v1.Connector.ControlStreamRequest.RequestTypeCase
      @JvmName("getRequestTypeCase")
      get() = _builder.getRequestTypeCase()

    public fun clearRequestType() {
      _builder.clearRequestType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun border0.v1.Connector.ControlStreamRequest.copy(block: border0.v1.ControlStreamRequestKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.ControlStreamRequest =
  border0.v1.ControlStreamRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val border0.v1.Connector.ControlStreamRequestOrBuilder.configOrNull: border0.v1.Connector.Config?
  get() = if (hasConfig()) getConfig() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.heartbeatOrNull: border0.common.v1.Messages.HeartbeatMessage?
  get() = if (hasHeartbeat()) getHeartbeat() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.pluginDiscoveryResultsOrNull: border0.v1.Connector.PluginDiscoveryResults?
  get() = if (hasPluginDiscoveryResults()) getPluginDiscoveryResults() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.tunnelCertificateSignRequestOrNull: border0.v1.Connector.TunnelCertificateSignRequest?
  get() = if (hasTunnelCertificateSignRequest()) getTunnelCertificateSignRequest() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.logOrNull: border0.v1.Connector.Log?
  get() = if (hasLog()) getLog() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.metadataOrNull: border0.v1.Connector.ConnectorMetadata?
  get() = if (hasMetadata()) getMetadata() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.authorizeOrNull: border0.v1.Connector.AuthorizeRequest?
  get() = if (hasAuthorize()) getAuthorize() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.sessionUpdateOrNull: border0.v1.Connector.SessionUpdateRequest?
  get() = if (hasSessionUpdate()) getSessionUpdate() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.sshCertificateSignRequestOrNull: border0.v1.Connector.SshCertificateSignRequest?
  get() = if (hasSshCertificateSignRequest()) getSshCertificateSignRequest() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.uploadRecordingOrNull: border0.v1.Connector.UploadRecording?
  get() = if (hasUploadRecording()) getUploadRecording() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.certificateSignRequestOrNull: border0.v1.Connector.CertificateSignRequest?
  get() = if (hasCertificateSignRequest()) getCertificateSignRequest() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.sessionEventOrNull: border0.v1.Connector.SessionEvent?
  get() = if (hasSessionEvent()) getSessionEvent() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.discoveryDetailsOrNull: border0.common.v1.Messages.DiscoveryDetailsMessage?
  get() = if (hasDiscoveryDetails()) getDiscoveryDetails() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.authorizePeerOrNull: border0.v1.Connector.AuthorizePeerRequest?
  get() = if (hasAuthorizePeer()) getAuthorizePeer() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.sessionOrNull: border0.v1.Connector.SessionRequest?
  get() = if (hasSession()) getSession() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.statsOrNull: border0.common.v1.Messages.StatsMessage?
  get() = if (hasStats()) getStats() else null

public val border0.v1.Connector.ControlStreamRequestOrBuilder.logsOrNull: border0.v1.Connector.Logs?
  get() = if (hasLogs()) getLogs() else null

