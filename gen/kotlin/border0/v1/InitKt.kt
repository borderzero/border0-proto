//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: connector.proto

package border0.v1;

@kotlin.jvm.JvmName("-initializeinit")
public inline fun init(block: border0.v1.InitKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.Init =
  border0.v1.InitKt.Dsl._create(border0.v1.Connector.Init.newBuilder()).apply { block() }._build()
public object InitKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: border0.v1.Connector.Init.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: border0.v1.Connector.Init.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): border0.v1.Connector.Init = _builder.build()

    /**
     * <code>.border0.v1.ConnectorConfig connector_config = 1;</code>
     */
    public var connectorConfig: border0.v1.Connector.ConnectorConfig
      @JvmName("getConnectorConfig")
      get() = _builder.getConnectorConfig()
      @JvmName("setConnectorConfig")
      set(value) {
        _builder.setConnectorConfig(value)
      }
    /**
     * <code>.border0.v1.ConnectorConfig connector_config = 1;</code>
     */
    public fun clearConnectorConfig() {
      _builder.clearConnectorConfig()
    }
    /**
     * <code>.border0.v1.ConnectorConfig connector_config = 1;</code>
     * @return Whether the connectorConfig field is set.
     */
    public fun hasConnectorConfig(): kotlin.Boolean {
      return _builder.hasConnectorConfig()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SocketsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .border0.v1.SocketConfig sockets = 2;</code>
     */
     public val sockets: com.google.protobuf.kotlin.DslList<border0.v1.Connector.SocketConfig, SocketsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSocketsList()
      )
    /**
     * <code>repeated .border0.v1.SocketConfig sockets = 2;</code>
     * @param value The sockets to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSockets")
    public fun com.google.protobuf.kotlin.DslList<border0.v1.Connector.SocketConfig, SocketsProxy>.add(value: border0.v1.Connector.SocketConfig) {
      _builder.addSockets(value)
    }
    /**
     * <code>repeated .border0.v1.SocketConfig sockets = 2;</code>
     * @param value The sockets to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSockets")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<border0.v1.Connector.SocketConfig, SocketsProxy>.plusAssign(value: border0.v1.Connector.SocketConfig) {
      add(value)
    }
    /**
     * <code>repeated .border0.v1.SocketConfig sockets = 2;</code>
     * @param values The sockets to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSockets")
    public fun com.google.protobuf.kotlin.DslList<border0.v1.Connector.SocketConfig, SocketsProxy>.addAll(values: kotlin.collections.Iterable<border0.v1.Connector.SocketConfig>) {
      _builder.addAllSockets(values)
    }
    /**
     * <code>repeated .border0.v1.SocketConfig sockets = 2;</code>
     * @param values The sockets to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSockets")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<border0.v1.Connector.SocketConfig, SocketsProxy>.plusAssign(values: kotlin.collections.Iterable<border0.v1.Connector.SocketConfig>) {
      addAll(values)
    }
    /**
     * <code>repeated .border0.v1.SocketConfig sockets = 2;</code>
     * @param index The index to set the value at.
     * @param value The sockets to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSockets")
    public operator fun com.google.protobuf.kotlin.DslList<border0.v1.Connector.SocketConfig, SocketsProxy>.set(index: kotlin.Int, value: border0.v1.Connector.SocketConfig) {
      _builder.setSockets(index, value)
    }
    /**
     * <code>repeated .border0.v1.SocketConfig sockets = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSockets")
    public fun com.google.protobuf.kotlin.DslList<border0.v1.Connector.SocketConfig, SocketsProxy>.clear() {
      _builder.clearSockets()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PluginsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .border0.v1.PluginConfig plugins = 3;</code>
     */
     public val plugins: com.google.protobuf.kotlin.DslList<border0.v1.Connector.PluginConfig, PluginsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPluginsList()
      )
    /**
     * <code>repeated .border0.v1.PluginConfig plugins = 3;</code>
     * @param value The plugins to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPlugins")
    public fun com.google.protobuf.kotlin.DslList<border0.v1.Connector.PluginConfig, PluginsProxy>.add(value: border0.v1.Connector.PluginConfig) {
      _builder.addPlugins(value)
    }
    /**
     * <code>repeated .border0.v1.PluginConfig plugins = 3;</code>
     * @param value The plugins to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPlugins")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<border0.v1.Connector.PluginConfig, PluginsProxy>.plusAssign(value: border0.v1.Connector.PluginConfig) {
      add(value)
    }
    /**
     * <code>repeated .border0.v1.PluginConfig plugins = 3;</code>
     * @param values The plugins to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPlugins")
    public fun com.google.protobuf.kotlin.DslList<border0.v1.Connector.PluginConfig, PluginsProxy>.addAll(values: kotlin.collections.Iterable<border0.v1.Connector.PluginConfig>) {
      _builder.addAllPlugins(values)
    }
    /**
     * <code>repeated .border0.v1.PluginConfig plugins = 3;</code>
     * @param values The plugins to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPlugins")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<border0.v1.Connector.PluginConfig, PluginsProxy>.plusAssign(values: kotlin.collections.Iterable<border0.v1.Connector.PluginConfig>) {
      addAll(values)
    }
    /**
     * <code>repeated .border0.v1.PluginConfig plugins = 3;</code>
     * @param index The index to set the value at.
     * @param value The plugins to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPlugins")
    public operator fun com.google.protobuf.kotlin.DslList<border0.v1.Connector.PluginConfig, PluginsProxy>.set(index: kotlin.Int, value: border0.v1.Connector.PluginConfig) {
      _builder.setPlugins(index, value)
    }
    /**
     * <code>repeated .border0.v1.PluginConfig plugins = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPlugins")
    public fun com.google.protobuf.kotlin.DslList<border0.v1.Connector.PluginConfig, PluginsProxy>.clear() {
      _builder.clearPlugins()
    }


    /**
     * <pre>
     * used only for connectors in "device mode"
     * </pre>
     *
     * <code>string device_id = 4;</code>
     */
    public var deviceId: kotlin.String
      @JvmName("getDeviceId")
      get() = _builder.getDeviceId()
      @JvmName("setDeviceId")
      set(value) {
        _builder.setDeviceId(value)
      }
    /**
     * <pre>
     * used only for connectors in "device mode"
     * </pre>
     *
     * <code>string device_id = 4;</code>
     */
    public fun clearDeviceId() {
      _builder.clearDeviceId()
    }

    /**
     * <code>string network_cidr_v4 = 5;</code>
     */
    public var networkCidrV4: kotlin.String
      @JvmName("getNetworkCidrV4")
      get() = _builder.getNetworkCidrV4()
      @JvmName("setNetworkCidrV4")
      set(value) {
        _builder.setNetworkCidrV4(value)
      }
    /**
     * <code>string network_cidr_v4 = 5;</code>
     */
    public fun clearNetworkCidrV4() {
      _builder.clearNetworkCidrV4()
    }

    /**
     * <code>string network_cidr_v6 = 6;</code>
     */
    public var networkCidrV6: kotlin.String
      @JvmName("getNetworkCidrV6")
      get() = _builder.getNetworkCidrV6()
      @JvmName("setNetworkCidrV6")
      set(value) {
        _builder.setNetworkCidrV6(value)
      }
    /**
     * <code>string network_cidr_v6 = 6;</code>
     */
    public fun clearNetworkCidrV6() {
      _builder.clearNetworkCidrV6()
    }

    /**
     * <code>string self_ipv4 = 7;</code>
     */
    public var selfIpv4: kotlin.String
      @JvmName("getSelfIpv4")
      get() = _builder.getSelfIpv4()
      @JvmName("setSelfIpv4")
      set(value) {
        _builder.setSelfIpv4(value)
      }
    /**
     * <code>string self_ipv4 = 7;</code>
     */
    public fun clearSelfIpv4() {
      _builder.clearSelfIpv4()
    }

    /**
     * <code>string self_ipv6 = 8;</code>
     */
    public var selfIpv6: kotlin.String
      @JvmName("getSelfIpv6")
      get() = _builder.getSelfIpv6()
      @JvmName("setSelfIpv6")
      set(value) {
        _builder.setSelfIpv6(value)
      }
    /**
     * <code>string self_ipv6 = 8;</code>
     */
    public fun clearSelfIpv6() {
      _builder.clearSelfIpv6()
    }

    /**
     * <code>string network_resources_cidr_v4 = 9;</code>
     */
    public var networkResourcesCidrV4: kotlin.String
      @JvmName("getNetworkResourcesCidrV4")
      get() = _builder.getNetworkResourcesCidrV4()
      @JvmName("setNetworkResourcesCidrV4")
      set(value) {
        _builder.setNetworkResourcesCidrV4(value)
      }
    /**
     * <code>string network_resources_cidr_v4 = 9;</code>
     */
    public fun clearNetworkResourcesCidrV4() {
      _builder.clearNetworkResourcesCidrV4()
    }

    /**
     * <code>string network_resources_cidr_v6 = 10;</code>
     */
    public var networkResourcesCidrV6: kotlin.String
      @JvmName("getNetworkResourcesCidrV6")
      get() = _builder.getNetworkResourcesCidrV6()
      @JvmName("setNetworkResourcesCidrV6")
      set(value) {
        _builder.setNetworkResourcesCidrV6(value)
      }
    /**
     * <code>string network_resources_cidr_v6 = 10;</code>
     */
    public fun clearNetworkResourcesCidrV6() {
      _builder.clearNetworkResourcesCidrV6()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun border0.v1.Connector.Init.copy(block: border0.v1.InitKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.Init =
  border0.v1.InitKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val border0.v1.Connector.InitOrBuilder.connectorConfigOrNull: border0.v1.Connector.ConnectorConfig?
  get() = if (hasConnectorConfig()) getConnectorConfig() else null

