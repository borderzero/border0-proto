//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: connector.proto

package border0.v1;

@kotlin.jvm.JvmName("-initializelog")
public inline fun log(block: border0.v1.LogKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.Log =
  border0.v1.LogKt.Dsl._create(border0.v1.Connector.Log.newBuilder()).apply { block() }._build()
public object LogKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: border0.v1.Connector.Log.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: border0.v1.Connector.Log.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): border0.v1.Connector.Log = _builder.build()

    /**
     * <code>string connector_id = 1;</code>
     */
    public var connectorId: kotlin.String
      @JvmName("getConnectorId")
      get() = _builder.getConnectorId()
      @JvmName("setConnectorId")
      set(value) {
        _builder.setConnectorId(value)
      }
    /**
     * <code>string connector_id = 1;</code>
     */
    public fun clearConnectorId() {
      _builder.clearConnectorId()
    }

    /**
     * <code>string socket_id = 2;</code>
     */
    public var socketId: kotlin.String
      @JvmName("getSocketId")
      get() = _builder.getSocketId()
      @JvmName("setSocketId")
      set(value) {
        _builder.setSocketId(value)
      }
    /**
     * <code>string socket_id = 2;</code>
     */
    public fun clearSocketId() {
      _builder.clearSocketId()
    }

    /**
     * <code>string plugin_id = 3;</code>
     */
    public var pluginId: kotlin.String
      @JvmName("getPluginId")
      get() = _builder.getPluginId()
      @JvmName("setPluginId")
      set(value) {
        _builder.setPluginId(value)
      }
    /**
     * <code>string plugin_id = 3;</code>
     */
    public fun clearPluginId() {
      _builder.clearPluginId()
    }

    /**
     * <code>.google.protobuf.Timestamp timestamp = 4;</code>
     */
    public var timestamp: com.google.protobuf.Timestamp
      @JvmName("getTimestamp")
      get() = _builder.getTimestamp()
      @JvmName("setTimestamp")
      set(value) {
        _builder.setTimestamp(value)
      }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 4;</code>
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 4;</code>
     * @return Whether the timestamp field is set.
     */
    public fun hasTimestamp(): kotlin.Boolean {
      return _builder.hasTimestamp()
    }

    /**
     * <code>string severity = 5;</code>
     */
    public var severity: kotlin.String
      @JvmName("getSeverity")
      get() = _builder.getSeverity()
      @JvmName("setSeverity")
      set(value) {
        _builder.setSeverity(value)
      }
    /**
     * <code>string severity = 5;</code>
     */
    public fun clearSeverity() {
      _builder.clearSeverity()
    }

    /**
     * <code>string message = 6;</code>
     */
    public var message: kotlin.String
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * <code>string message = 6;</code>
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun border0.v1.Connector.Log.copy(block: border0.v1.LogKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.Log =
  border0.v1.LogKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val border0.v1.Connector.LogOrBuilder.timestampOrNull: com.google.protobuf.Timestamp?
  get() = if (hasTimestamp()) getTimestamp() else null

