//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: connector.proto

package border0.v1;

@kotlin.jvm.JvmName("-initializesessionResponse")
public inline fun sessionResponse(block: border0.v1.SessionResponseKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.SessionResponse =
  border0.v1.SessionResponseKt.Dsl._create(border0.v1.Connector.SessionResponse.newBuilder()).apply { block() }._build()
public object SessionResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: border0.v1.Connector.SessionResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: border0.v1.Connector.SessionResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): border0.v1.Connector.SessionResponse = _builder.build()

    /**
     * <code>string request_id = 1;</code>
     */
    public var requestId: kotlin.String
      @JvmName("getRequestId")
      get() = _builder.getRequestId()
      @JvmName("setRequestId")
      set(value) {
        _builder.setRequestId(value)
      }
    /**
     * <code>string request_id = 1;</code>
     */
    public fun clearRequestId() {
      _builder.clearRequestId()
    }

    /**
     * <code>string session_id = 2;</code>
     */
    public var sessionId: kotlin.String
      @JvmName("getSessionId")
      get() = _builder.getSessionId()
      @JvmName("setSessionId")
      set(value) {
        _builder.setSessionId(value)
      }
    /**
     * <code>string session_id = 2;</code>
     */
    public fun clearSessionId() {
      _builder.clearSessionId()
    }

    /**
     * <code>bytes ssh_ticket = 3;</code>
     */
    public var sshTicket: com.google.protobuf.ByteString
      @JvmName("getSshTicket")
      get() = _builder.getSshTicket()
      @JvmName("setSshTicket")
      set(value) {
        _builder.setSshTicket(value)
      }
    /**
     * <code>bytes ssh_ticket = 3;</code>
     */
    public fun clearSshTicket() {
      _builder.clearSshTicket()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun border0.v1.Connector.SessionResponse.copy(block: border0.v1.SessionResponseKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.SessionResponse =
  border0.v1.SessionResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

