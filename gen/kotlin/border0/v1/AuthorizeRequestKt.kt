//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: connector.proto

package border0.v1;

@kotlin.jvm.JvmName("-initializeauthorizeRequest")
public inline fun authorizeRequest(block: border0.v1.AuthorizeRequestKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.AuthorizeRequest =
  border0.v1.AuthorizeRequestKt.Dsl._create(border0.v1.Connector.AuthorizeRequest.newBuilder()).apply { block() }._build()
public object AuthorizeRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: border0.v1.Connector.AuthorizeRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: border0.v1.Connector.AuthorizeRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): border0.v1.Connector.AuthorizeRequest = _builder.build()

    /**
     * <code>string request_id = 1;</code>
     */
    public var requestId: kotlin.String
      @JvmName("getRequestId")
      get() = _builder.getRequestId()
      @JvmName("setRequestId")
      set(value) {
        _builder.setRequestId(value)
      }
    /**
     * <code>string request_id = 1;</code>
     */
    public fun clearRequestId() {
      _builder.clearRequestId()
    }

    /**
     * <code>string protocol = 2;</code>
     */
    public var protocol: kotlin.String
      @JvmName("getProtocol")
      get() = _builder.getProtocol()
      @JvmName("setProtocol")
      set(value) {
        _builder.setProtocol(value)
      }
    /**
     * <code>string protocol = 2;</code>
     */
    public fun clearProtocol() {
      _builder.clearProtocol()
    }

    /**
     * <code>string user_email = 3;</code>
     */
    public var userEmail: kotlin.String
      @JvmName("getUserEmail")
      get() = _builder.getUserEmail()
      @JvmName("setUserEmail")
      set(value) {
        _builder.setUserEmail(value)
      }
    /**
     * <code>string user_email = 3;</code>
     */
    public fun clearUserEmail() {
      _builder.clearUserEmail()
    }

    /**
     * <code>string ip_address = 4;</code>
     */
    public var ipAddress: kotlin.String
      @JvmName("getIpAddress")
      get() = _builder.getIpAddress()
      @JvmName("setIpAddress")
      set(value) {
        _builder.setIpAddress(value)
      }
    /**
     * <code>string ip_address = 4;</code>
     */
    public fun clearIpAddress() {
      _builder.clearIpAddress()
    }

    /**
     * <code>string session_key = 5;</code>
     */
    public var sessionKey: kotlin.String
      @JvmName("getSessionKey")
      get() = _builder.getSessionKey()
      @JvmName("setSessionKey")
      set(value) {
        _builder.setSessionKey(value)
      }
    /**
     * <code>string session_key = 5;</code>
     */
    public fun clearSessionKey() {
      _builder.clearSessionKey()
    }

    /**
     * <code>string socket_id = 6;</code>
     */
    public var socketId: kotlin.String
      @JvmName("getSocketId")
      get() = _builder.getSocketId()
      @JvmName("setSocketId")
      set(value) {
        _builder.setSocketId(value)
      }
    /**
     * <code>string socket_id = 6;</code>
     */
    public fun clearSocketId() {
      _builder.clearSocketId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun border0.v1.Connector.AuthorizeRequest.copy(block: border0.v1.AuthorizeRequestKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.AuthorizeRequest =
  border0.v1.AuthorizeRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

