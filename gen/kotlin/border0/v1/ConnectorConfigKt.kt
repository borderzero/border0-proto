//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: connector.proto

package border0.v1;

@kotlin.jvm.JvmName("-initializeconnectorConfig")
public inline fun connectorConfig(block: border0.v1.ConnectorConfigKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.ConnectorConfig =
  border0.v1.ConnectorConfigKt.Dsl._create(border0.v1.Connector.ConnectorConfig.newBuilder()).apply { block() }._build()
public object ConnectorConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: border0.v1.Connector.ConnectorConfig.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: border0.v1.Connector.ConnectorConfig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): border0.v1.Connector.ConnectorConfig = _builder.build()

    /**
     * <code>string name = 1;</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 1;</code>
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>int32 heartbeat_interval = 2;</code>
     */
    public var heartbeatInterval: kotlin.Int
      @JvmName("getHeartbeatInterval")
      get() = _builder.getHeartbeatInterval()
      @JvmName("setHeartbeatInterval")
      set(value) {
        _builder.setHeartbeatInterval(value)
      }
    /**
     * <code>int32 heartbeat_interval = 2;</code>
     */
    public fun clearHeartbeatInterval() {
      _builder.clearHeartbeatInterval()
    }

    /**
     * <code>.border0.v1.Organization organization = 3;</code>
     */
    public var organization: border0.v1.Connector.Organization
      @JvmName("getOrganization")
      get() = _builder.getOrganization()
      @JvmName("setOrganization")
      set(value) {
        _builder.setOrganization(value)
      }
    /**
     * <code>.border0.v1.Organization organization = 3;</code>
     */
    public fun clearOrganization() {
      _builder.clearOrganization()
    }
    /**
     * <code>.border0.v1.Organization organization = 3;</code>
     * @return Whether the organization field is set.
     */
    public fun hasOrganization(): kotlin.Boolean {
      return _builder.hasOrganization()
    }

    /**
     * <code>bool private_network_enabled = 4;</code>
     */
    public var privateNetworkEnabled: kotlin.Boolean
      @JvmName("getPrivateNetworkEnabled")
      get() = _builder.getPrivateNetworkEnabled()
      @JvmName("setPrivateNetworkEnabled")
      set(value) {
        _builder.setPrivateNetworkEnabled(value)
      }
    /**
     * <code>bool private_network_enabled = 4;</code>
     */
    public fun clearPrivateNetworkEnabled() {
      _builder.clearPrivateNetworkEnabled()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun border0.v1.Connector.ConnectorConfig.copy(block: border0.v1.ConnectorConfigKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.ConnectorConfig =
  border0.v1.ConnectorConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val border0.v1.Connector.ConnectorConfigOrBuilder.organizationOrNull: border0.v1.Connector.Organization?
  get() = if (hasOrganization()) getOrganization() else null

