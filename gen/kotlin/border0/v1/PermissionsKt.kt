//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: connector.proto

package border0.v1;

@kotlin.jvm.JvmName("-initializepermissions")
public inline fun permissions(block: border0.v1.PermissionsKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.Permissions =
  border0.v1.PermissionsKt.Dsl._create(border0.v1.Connector.Permissions.newBuilder()).apply { block() }._build()
public object PermissionsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: border0.v1.Connector.Permissions.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: border0.v1.Connector.Permissions.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): border0.v1.Connector.Permissions = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PermissionsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .google.protobuf.Struct permissions = 1;</code>
     */
     public val permissions: com.google.protobuf.kotlin.DslList<com.google.protobuf.Struct, PermissionsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPermissionsList()
      )
    /**
     * <code>repeated .google.protobuf.Struct permissions = 1;</code>
     * @param value The permissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPermissions")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Struct, PermissionsProxy>.add(value: com.google.protobuf.Struct) {
      _builder.addPermissions(value)
    }
    /**
     * <code>repeated .google.protobuf.Struct permissions = 1;</code>
     * @param value The permissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPermissions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Struct, PermissionsProxy>.plusAssign(value: com.google.protobuf.Struct) {
      add(value)
    }
    /**
     * <code>repeated .google.protobuf.Struct permissions = 1;</code>
     * @param values The permissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPermissions")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Struct, PermissionsProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.Struct>) {
      _builder.addAllPermissions(values)
    }
    /**
     * <code>repeated .google.protobuf.Struct permissions = 1;</code>
     * @param values The permissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPermissions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Struct, PermissionsProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.Struct>) {
      addAll(values)
    }
    /**
     * <code>repeated .google.protobuf.Struct permissions = 1;</code>
     * @param index The index to set the value at.
     * @param value The permissions to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPermissions")
    public operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Struct, PermissionsProxy>.set(index: kotlin.Int, value: com.google.protobuf.Struct) {
      _builder.setPermissions(index, value)
    }
    /**
     * <code>repeated .google.protobuf.Struct permissions = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPermissions")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Struct, PermissionsProxy>.clear() {
      _builder.clearPermissions()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun border0.v1.Connector.Permissions.copy(block: border0.v1.PermissionsKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.Permissions =
  border0.v1.PermissionsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

