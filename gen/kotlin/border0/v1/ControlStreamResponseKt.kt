//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: connector.proto

package border0.v1;

@kotlin.jvm.JvmName("-initializecontrolStreamResponse")
public inline fun controlStreamResponse(block: border0.v1.ControlStreamResponseKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.ControlStreamResponse =
  border0.v1.ControlStreamResponseKt.Dsl._create(border0.v1.Connector.ControlStreamResponse.newBuilder()).apply { block() }._build()
public object ControlStreamResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: border0.v1.Connector.ControlStreamResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: border0.v1.Connector.ControlStreamResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): border0.v1.Connector.ControlStreamResponse = _builder.build()

    /**
     * <code>.border0.v1.Init init = 1;</code>
     */
    public var init: border0.v1.Connector.Init
      @JvmName("getInit")
      get() = _builder.getInit()
      @JvmName("setInit")
      set(value) {
        _builder.setInit(value)
      }
    /**
     * <code>.border0.v1.Init init = 1;</code>
     */
    public fun clearInit() {
      _builder.clearInit()
    }
    /**
     * <code>.border0.v1.Init init = 1;</code>
     * @return Whether the init field is set.
     */
    public fun hasInit(): kotlin.Boolean {
      return _builder.hasInit()
    }

    /**
     * <code>.border0.v1.ConnectorConfig connector_config = 2;</code>
     */
    public var connectorConfig: border0.v1.Connector.ConnectorConfig
      @JvmName("getConnectorConfig")
      get() = _builder.getConnectorConfig()
      @JvmName("setConnectorConfig")
      set(value) {
        _builder.setConnectorConfig(value)
      }
    /**
     * <code>.border0.v1.ConnectorConfig connector_config = 2;</code>
     */
    public fun clearConnectorConfig() {
      _builder.clearConnectorConfig()
    }
    /**
     * <code>.border0.v1.ConnectorConfig connector_config = 2;</code>
     * @return Whether the connectorConfig field is set.
     */
    public fun hasConnectorConfig(): kotlin.Boolean {
      return _builder.hasConnectorConfig()
    }

    /**
     * <code>.border0.v1.UpdateConfig update_config = 3;</code>
     */
    public var updateConfig: border0.v1.Connector.UpdateConfig
      @JvmName("getUpdateConfig")
      get() = _builder.getUpdateConfig()
      @JvmName("setUpdateConfig")
      set(value) {
        _builder.setUpdateConfig(value)
      }
    /**
     * <code>.border0.v1.UpdateConfig update_config = 3;</code>
     */
    public fun clearUpdateConfig() {
      _builder.clearUpdateConfig()
    }
    /**
     * <code>.border0.v1.UpdateConfig update_config = 3;</code>
     * @return Whether the updateConfig field is set.
     */
    public fun hasUpdateConfig(): kotlin.Boolean {
      return _builder.hasUpdateConfig()
    }

    /**
     * <code>.border0.common.v1.HeartbeatMessage heartbeat = 4;</code>
     */
    public var heartbeat: border0.common.v1.Messages.HeartbeatMessage
      @JvmName("getHeartbeat")
      get() = _builder.getHeartbeat()
      @JvmName("setHeartbeat")
      set(value) {
        _builder.setHeartbeat(value)
      }
    /**
     * <code>.border0.common.v1.HeartbeatMessage heartbeat = 4;</code>
     */
    public fun clearHeartbeat() {
      _builder.clearHeartbeat()
    }
    /**
     * <code>.border0.common.v1.HeartbeatMessage heartbeat = 4;</code>
     * @return Whether the heartbeat field is set.
     */
    public fun hasHeartbeat(): kotlin.Boolean {
      return _builder.hasHeartbeat()
    }

    /**
     * <code>.border0.v1.TunnelCertificateSignResponse tunnel_certificate_sign_response = 5;</code>
     */
    public var tunnelCertificateSignResponse: border0.v1.Connector.TunnelCertificateSignResponse
      @JvmName("getTunnelCertificateSignResponse")
      get() = _builder.getTunnelCertificateSignResponse()
      @JvmName("setTunnelCertificateSignResponse")
      set(value) {
        _builder.setTunnelCertificateSignResponse(value)
      }
    /**
     * <code>.border0.v1.TunnelCertificateSignResponse tunnel_certificate_sign_response = 5;</code>
     */
    public fun clearTunnelCertificateSignResponse() {
      _builder.clearTunnelCertificateSignResponse()
    }
    /**
     * <code>.border0.v1.TunnelCertificateSignResponse tunnel_certificate_sign_response = 5;</code>
     * @return Whether the tunnelCertificateSignResponse field is set.
     */
    public fun hasTunnelCertificateSignResponse(): kotlin.Boolean {
      return _builder.hasTunnelCertificateSignResponse()
    }

    /**
     * <code>.border0.v1.Discover discover = 6;</code>
     */
    public var discover: border0.v1.Connector.Discover
      @JvmName("getDiscover")
      get() = _builder.getDiscover()
      @JvmName("setDiscover")
      set(value) {
        _builder.setDiscover(value)
      }
    /**
     * <code>.border0.v1.Discover discover = 6;</code>
     */
    public fun clearDiscover() {
      _builder.clearDiscover()
    }
    /**
     * <code>.border0.v1.Discover discover = 6;</code>
     * @return Whether the discover field is set.
     */
    public fun hasDiscover(): kotlin.Boolean {
      return _builder.hasDiscover()
    }

    /**
     * <code>.border0.v1.Stop stop = 7;</code>
     */
    public var stop: border0.v1.Connector.Stop
      @JvmName("getStop")
      get() = _builder.getStop()
      @JvmName("setStop")
      set(value) {
        _builder.setStop(value)
      }
    /**
     * <code>.border0.v1.Stop stop = 7;</code>
     */
    public fun clearStop() {
      _builder.clearStop()
    }
    /**
     * <code>.border0.v1.Stop stop = 7;</code>
     * @return Whether the stop field is set.
     */
    public fun hasStop(): kotlin.Boolean {
      return _builder.hasStop()
    }

    /**
     * <code>.border0.v1.Disconnect disconnect = 8;</code>
     */
    public var disconnect: border0.v1.Connector.Disconnect
      @JvmName("getDisconnect")
      get() = _builder.getDisconnect()
      @JvmName("setDisconnect")
      set(value) {
        _builder.setDisconnect(value)
      }
    /**
     * <code>.border0.v1.Disconnect disconnect = 8;</code>
     */
    public fun clearDisconnect() {
      _builder.clearDisconnect()
    }
    /**
     * <code>.border0.v1.Disconnect disconnect = 8;</code>
     * @return Whether the disconnect field is set.
     */
    public fun hasDisconnect(): kotlin.Boolean {
      return _builder.hasDisconnect()
    }

    /**
     * <code>.border0.v1.AuthorizeResponse authorize = 9;</code>
     */
    public var authorize: border0.v1.Connector.AuthorizeResponse
      @JvmName("getAuthorize")
      get() = _builder.getAuthorize()
      @JvmName("setAuthorize")
      set(value) {
        _builder.setAuthorize(value)
      }
    /**
     * <code>.border0.v1.AuthorizeResponse authorize = 9;</code>
     */
    public fun clearAuthorize() {
      _builder.clearAuthorize()
    }
    /**
     * <code>.border0.v1.AuthorizeResponse authorize = 9;</code>
     * @return Whether the authorize field is set.
     */
    public fun hasAuthorize(): kotlin.Boolean {
      return _builder.hasAuthorize()
    }

    /**
     * <code>.border0.v1.SshCertificateSignResponse ssh_certificate_sign_response = 10;</code>
     */
    public var sshCertificateSignResponse: border0.v1.Connector.SshCertificateSignResponse
      @JvmName("getSshCertificateSignResponse")
      get() = _builder.getSshCertificateSignResponse()
      @JvmName("setSshCertificateSignResponse")
      set(value) {
        _builder.setSshCertificateSignResponse(value)
      }
    /**
     * <code>.border0.v1.SshCertificateSignResponse ssh_certificate_sign_response = 10;</code>
     */
    public fun clearSshCertificateSignResponse() {
      _builder.clearSshCertificateSignResponse()
    }
    /**
     * <code>.border0.v1.SshCertificateSignResponse ssh_certificate_sign_response = 10;</code>
     * @return Whether the sshCertificateSignResponse field is set.
     */
    public fun hasSshCertificateSignResponse(): kotlin.Boolean {
      return _builder.hasSshCertificateSignResponse()
    }

    /**
     * <code>.border0.v1.CertificateSignResponse Certificate_sign_response = 11;</code>
     */
    public var certificateSignResponse: border0.v1.Connector.CertificateSignResponse
      @JvmName("getCertificateSignResponse")
      get() = _builder.getCertificateSignResponse()
      @JvmName("setCertificateSignResponse")
      set(value) {
        _builder.setCertificateSignResponse(value)
      }
    /**
     * <code>.border0.v1.CertificateSignResponse Certificate_sign_response = 11;</code>
     */
    public fun clearCertificateSignResponse() {
      _builder.clearCertificateSignResponse()
    }
    /**
     * <code>.border0.v1.CertificateSignResponse Certificate_sign_response = 11;</code>
     * @return Whether the certificateSignResponse field is set.
     */
    public fun hasCertificateSignResponse(): kotlin.Boolean {
      return _builder.hasCertificateSignResponse()
    }

    /**
     * <code>.border0.common.v1.NetworkStateMessage network_state = 12;</code>
     */
    public var networkState: border0.common.v1.Messages.NetworkStateMessage
      @JvmName("getNetworkState")
      get() = _builder.getNetworkState()
      @JvmName("setNetworkState")
      set(value) {
        _builder.setNetworkState(value)
      }
    /**
     * <code>.border0.common.v1.NetworkStateMessage network_state = 12;</code>
     */
    public fun clearNetworkState() {
      _builder.clearNetworkState()
    }
    /**
     * <code>.border0.common.v1.NetworkStateMessage network_state = 12;</code>
     * @return Whether the networkState field is set.
     */
    public fun hasNetworkState(): kotlin.Boolean {
      return _builder.hasNetworkState()
    }

    /**
     * <code>.border0.common.v1.PeerOnlineMessage peer_online = 13;</code>
     */
    public var peerOnline: border0.common.v1.Messages.PeerOnlineMessage
      @JvmName("getPeerOnline")
      get() = _builder.getPeerOnline()
      @JvmName("setPeerOnline")
      set(value) {
        _builder.setPeerOnline(value)
      }
    /**
     * <code>.border0.common.v1.PeerOnlineMessage peer_online = 13;</code>
     */
    public fun clearPeerOnline() {
      _builder.clearPeerOnline()
    }
    /**
     * <code>.border0.common.v1.PeerOnlineMessage peer_online = 13;</code>
     * @return Whether the peerOnline field is set.
     */
    public fun hasPeerOnline(): kotlin.Boolean {
      return _builder.hasPeerOnline()
    }

    /**
     * <code>.border0.common.v1.PeerOfflineMessage peer_offline = 14;</code>
     */
    public var peerOffline: border0.common.v1.Messages.PeerOfflineMessage
      @JvmName("getPeerOffline")
      get() = _builder.getPeerOffline()
      @JvmName("setPeerOffline")
      set(value) {
        _builder.setPeerOffline(value)
      }
    /**
     * <code>.border0.common.v1.PeerOfflineMessage peer_offline = 14;</code>
     */
    public fun clearPeerOffline() {
      _builder.clearPeerOffline()
    }
    /**
     * <code>.border0.common.v1.PeerOfflineMessage peer_offline = 14;</code>
     * @return Whether the peerOffline field is set.
     */
    public fun hasPeerOffline(): kotlin.Boolean {
      return _builder.hasPeerOffline()
    }

    /**
     * <code>.border0.v1.SessionResponse session = 16;</code>
     */
    public var session: border0.v1.Connector.SessionResponse
      @JvmName("getSession")
      get() = _builder.getSession()
      @JvmName("setSession")
      set(value) {
        _builder.setSession(value)
      }
    /**
     * <code>.border0.v1.SessionResponse session = 16;</code>
     */
    public fun clearSession() {
      _builder.clearSession()
    }
    /**
     * <code>.border0.v1.SessionResponse session = 16;</code>
     * @return Whether the session field is set.
     */
    public fun hasSession(): kotlin.Boolean {
      return _builder.hasSession()
    }
    public val requestTypeCase: border0.v1.Connector.ControlStreamResponse.RequestTypeCase
      @JvmName("getRequestTypeCase")
      get() = _builder.getRequestTypeCase()

    public fun clearRequestType() {
      _builder.clearRequestType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun border0.v1.Connector.ControlStreamResponse.copy(block: border0.v1.ControlStreamResponseKt.Dsl.() -> kotlin.Unit): border0.v1.Connector.ControlStreamResponse =
  border0.v1.ControlStreamResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val border0.v1.Connector.ControlStreamResponseOrBuilder.initOrNull: border0.v1.Connector.Init?
  get() = if (hasInit()) getInit() else null

public val border0.v1.Connector.ControlStreamResponseOrBuilder.connectorConfigOrNull: border0.v1.Connector.ConnectorConfig?
  get() = if (hasConnectorConfig()) getConnectorConfig() else null

public val border0.v1.Connector.ControlStreamResponseOrBuilder.updateConfigOrNull: border0.v1.Connector.UpdateConfig?
  get() = if (hasUpdateConfig()) getUpdateConfig() else null

public val border0.v1.Connector.ControlStreamResponseOrBuilder.heartbeatOrNull: border0.common.v1.Messages.HeartbeatMessage?
  get() = if (hasHeartbeat()) getHeartbeat() else null

public val border0.v1.Connector.ControlStreamResponseOrBuilder.tunnelCertificateSignResponseOrNull: border0.v1.Connector.TunnelCertificateSignResponse?
  get() = if (hasTunnelCertificateSignResponse()) getTunnelCertificateSignResponse() else null

public val border0.v1.Connector.ControlStreamResponseOrBuilder.discoverOrNull: border0.v1.Connector.Discover?
  get() = if (hasDiscover()) getDiscover() else null

public val border0.v1.Connector.ControlStreamResponseOrBuilder.stopOrNull: border0.v1.Connector.Stop?
  get() = if (hasStop()) getStop() else null

public val border0.v1.Connector.ControlStreamResponseOrBuilder.disconnectOrNull: border0.v1.Connector.Disconnect?
  get() = if (hasDisconnect()) getDisconnect() else null

public val border0.v1.Connector.ControlStreamResponseOrBuilder.authorizeOrNull: border0.v1.Connector.AuthorizeResponse?
  get() = if (hasAuthorize()) getAuthorize() else null

public val border0.v1.Connector.ControlStreamResponseOrBuilder.sshCertificateSignResponseOrNull: border0.v1.Connector.SshCertificateSignResponse?
  get() = if (hasSshCertificateSignResponse()) getSshCertificateSignResponse() else null

public val border0.v1.Connector.ControlStreamResponseOrBuilder.certificateSignResponseOrNull: border0.v1.Connector.CertificateSignResponse?
  get() = if (hasCertificateSignResponse()) getCertificateSignResponse() else null

public val border0.v1.Connector.ControlStreamResponseOrBuilder.networkStateOrNull: border0.common.v1.Messages.NetworkStateMessage?
  get() = if (hasNetworkState()) getNetworkState() else null

public val border0.v1.Connector.ControlStreamResponseOrBuilder.peerOnlineOrNull: border0.common.v1.Messages.PeerOnlineMessage?
  get() = if (hasPeerOnline()) getPeerOnline() else null

public val border0.v1.Connector.ControlStreamResponseOrBuilder.peerOfflineOrNull: border0.common.v1.Messages.PeerOfflineMessage?
  get() = if (hasPeerOffline()) getPeerOffline() else null

public val border0.v1.Connector.ControlStreamResponseOrBuilder.sessionOrNull: border0.v1.Connector.SessionResponse?
  get() = if (hasSession()) getSession() else null

