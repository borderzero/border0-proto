//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: device.proto

package border0.device.v1;

@kotlin.jvm.JvmName("-initializeauthChallengeMessage")
public inline fun authChallengeMessage(block: border0.device.v1.AuthChallengeMessageKt.Dsl.() -> kotlin.Unit): border0.device.v1.Device.AuthChallengeMessage =
  border0.device.v1.AuthChallengeMessageKt.Dsl._create(border0.device.v1.Device.AuthChallengeMessage.newBuilder()).apply { block() }._build()
public object AuthChallengeMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: border0.device.v1.Device.AuthChallengeMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: border0.device.v1.Device.AuthChallengeMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): border0.device.v1.Device.AuthChallengeMessage = _builder.build()

    /**
     * <code>string serverPublicKey = 1;</code>
     */
    public var serverPublicKey: kotlin.String
      @JvmName("getServerPublicKey")
      get() = _builder.getServerPublicKey()
      @JvmName("setServerPublicKey")
      set(value) {
        _builder.setServerPublicKey(value)
      }
    /**
     * <code>string serverPublicKey = 1;</code>
     */
    public fun clearServerPublicKey() {
      _builder.clearServerPublicKey()
    }

    /**
     * <code>bytes challenge = 2;</code>
     */
    public var challenge: com.google.protobuf.ByteString
      @JvmName("getChallenge")
      get() = _builder.getChallenge()
      @JvmName("setChallenge")
      set(value) {
        _builder.setChallenge(value)
      }
    /**
     * <code>bytes challenge = 2;</code>
     */
    public fun clearChallenge() {
      _builder.clearChallenge()
    }

    /**
     * <code>bytes challengeNonce = 3;</code>
     */
    public var challengeNonce: com.google.protobuf.ByteString
      @JvmName("getChallengeNonce")
      get() = _builder.getChallengeNonce()
      @JvmName("setChallengeNonce")
      set(value) {
        _builder.setChallengeNonce(value)
      }
    /**
     * <code>bytes challengeNonce = 3;</code>
     */
    public fun clearChallengeNonce() {
      _builder.clearChallengeNonce()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun border0.device.v1.Device.AuthChallengeMessage.copy(block: border0.device.v1.AuthChallengeMessageKt.Dsl.() -> kotlin.Unit): border0.device.v1.Device.AuthChallengeMessage =
  border0.device.v1.AuthChallengeMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

