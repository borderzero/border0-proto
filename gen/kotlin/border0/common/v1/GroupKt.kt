//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messages.proto

package border0.common.v1;

@kotlin.jvm.JvmName("-initializegroup")
public inline fun group(block: border0.common.v1.GroupKt.Dsl.() -> kotlin.Unit): border0.common.v1.Messages.Group =
  border0.common.v1.GroupKt.Dsl._create(border0.common.v1.Messages.Group.newBuilder()).apply { block() }._build()
public object GroupKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: border0.common.v1.Messages.Group.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: border0.common.v1.Messages.Group.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): border0.common.v1.Messages.Group = _builder.build()

    /**
     * <code>string uuid = 1;</code>
     */
    public var uuid: kotlin.String
      @JvmName("getUuid")
      get() = _builder.getUuid()
      @JvmName("setUuid")
      set(value) {
        _builder.setUuid(value)
      }
    /**
     * <code>string uuid = 1;</code>
     */
    public fun clearUuid() {
      _builder.clearUuid()
    }

    /**
     * <code>string name = 2;</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 2;</code>
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>string type = 3;</code>
     */
    public var type: kotlin.String
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <code>string type = 3;</code>
     */
    public fun clearType() {
      _builder.clearType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun border0.common.v1.Messages.Group.copy(block: border0.common.v1.GroupKt.Dsl.() -> kotlin.Unit): border0.common.v1.Messages.Group =
  border0.common.v1.GroupKt.Dsl._create(this.toBuilder()).apply { block() }._build()

