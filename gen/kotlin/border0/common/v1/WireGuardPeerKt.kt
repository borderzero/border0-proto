//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messages.proto

package border0.common.v1;

@kotlin.jvm.JvmName("-initializewireGuardPeer")
public inline fun wireGuardPeer(block: border0.common.v1.WireGuardPeerKt.Dsl.() -> kotlin.Unit): border0.common.v1.Messages.WireGuardPeer =
  border0.common.v1.WireGuardPeerKt.Dsl._create(border0.common.v1.Messages.WireGuardPeer.newBuilder()).apply { block() }._build()
public object WireGuardPeerKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: border0.common.v1.Messages.WireGuardPeer.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: border0.common.v1.Messages.WireGuardPeer.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): border0.common.v1.Messages.WireGuardPeer = _builder.build()

    /**
     * <pre>
     * the public key of the peer, used for identification and encryption
     * </pre>
     *
     * <code>string public_key = 1;</code>
     */
    public var publicKey: kotlin.String
      @JvmName("getPublicKey")
      get() = _builder.getPublicKey()
      @JvmName("setPublicKey")
      set(value) {
        _builder.setPublicKey(value)
      }
    /**
     * <pre>
     * the public key of the peer, used for identification and encryption
     * </pre>
     *
     * <code>string public_key = 1;</code>
     */
    public fun clearPublicKey() {
      _builder.clearPublicKey()
    }

    /**
     * <pre>
     * the peer's (private) IPv4 address in the WireGuard network
     * </pre>
     *
     * <code>string ipv4 = 2;</code>
     */
    public var ipv4: kotlin.String
      @JvmName("getIpv4")
      get() = _builder.getIpv4()
      @JvmName("setIpv4")
      set(value) {
        _builder.setIpv4(value)
      }
    /**
     * <pre>
     * the peer's (private) IPv4 address in the WireGuard network
     * </pre>
     *
     * <code>string ipv4 = 2;</code>
     */
    public fun clearIpv4() {
      _builder.clearIpv4()
    }

    /**
     * <pre>
     * the peer's (private) IPv6 address in the WireGuard network
     * </pre>
     *
     * <code>string ipv6 = 3;</code>
     */
    public var ipv6: kotlin.String
      @JvmName("getIpv6")
      get() = _builder.getIpv6()
      @JvmName("setIpv6")
      set(value) {
        _builder.setIpv6(value)
      }
    /**
     * <pre>
     * the peer's (private) IPv6 address in the WireGuard network
     * </pre>
     *
     * <code>string ipv6 = 3;</code>
     */
    public fun clearIpv6() {
      _builder.clearIpv6()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class AllowedIpsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * list of routes (CIDRs) to be routed through this peer (most peers will just have their own IP/32). (this field is now deprecated in favor of building the allowed_ips list from ipv4 + ipv6 + service ips + subnet routes)
     * </pre>
     *
     * <code>repeated string allowed_ips = 4 [deprecated = true];</code>
     * @deprecated border0.common.v1.WireGuardPeer.allowed_ips is deprecated.
     *     See messages.proto;l=76
     * @return A list containing the allowedIps.
     */
    @kotlin.Deprecated(message = "Field allowedIps is deprecated") public val allowedIps: com.google.protobuf.kotlin.DslList<kotlin.String, AllowedIpsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getAllowedIpsList()
      )
    /**
     * <pre>
     * list of routes (CIDRs) to be routed through this peer (most peers will just have their own IP/32). (this field is now deprecated in favor of building the allowed_ips list from ipv4 + ipv6 + service ips + subnet routes)
     * </pre>
     *
     * <code>repeated string allowed_ips = 4 [deprecated = true];</code>
     * @deprecated border0.common.v1.WireGuardPeer.allowed_ips is deprecated.
     *     See messages.proto;l=76
     * @param value The allowedIps to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllowedIps")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, AllowedIpsProxy>.add(value: kotlin.String) {
      _builder.addAllowedIps(value)
    }
    /**
     * <pre>
     * list of routes (CIDRs) to be routed through this peer (most peers will just have their own IP/32). (this field is now deprecated in favor of building the allowed_ips list from ipv4 + ipv6 + service ips + subnet routes)
     * </pre>
     *
     * <code>repeated string allowed_ips = 4 [deprecated = true];</code>
     * @deprecated border0.common.v1.WireGuardPeer.allowed_ips is deprecated.
     *     See messages.proto;l=76
     * @param value The allowedIps to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllowedIps")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AllowedIpsProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <pre>
     * list of routes (CIDRs) to be routed through this peer (most peers will just have their own IP/32). (this field is now deprecated in favor of building the allowed_ips list from ipv4 + ipv6 + service ips + subnet routes)
     * </pre>
     *
     * <code>repeated string allowed_ips = 4 [deprecated = true];</code>
     * @deprecated border0.common.v1.WireGuardPeer.allowed_ips is deprecated.
     *     See messages.proto;l=76
     * @param values The allowedIps to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllAllowedIps")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, AllowedIpsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllAllowedIps(values)
    }
    /**
     * <pre>
     * list of routes (CIDRs) to be routed through this peer (most peers will just have their own IP/32). (this field is now deprecated in favor of building the allowed_ips list from ipv4 + ipv6 + service ips + subnet routes)
     * </pre>
     *
     * <code>repeated string allowed_ips = 4 [deprecated = true];</code>
     * @deprecated border0.common.v1.WireGuardPeer.allowed_ips is deprecated.
     *     See messages.proto;l=76
     * @param values The allowedIps to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllAllowedIps")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AllowedIpsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <pre>
     * list of routes (CIDRs) to be routed through this peer (most peers will just have their own IP/32). (this field is now deprecated in favor of building the allowed_ips list from ipv4 + ipv6 + service ips + subnet routes)
     * </pre>
     *
     * <code>repeated string allowed_ips = 4 [deprecated = true];</code>
     * @deprecated border0.common.v1.WireGuardPeer.allowed_ips is deprecated.
     *     See messages.proto;l=76
     * @param index The index to set the value at.
     * @param value The allowedIps to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setAllowedIps")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AllowedIpsProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setAllowedIps(index, value)
    }/**
     * <pre>
     * list of routes (CIDRs) to be routed through this peer (most peers will just have their own IP/32). (this field is now deprecated in favor of building the allowed_ips list from ipv4 + ipv6 + service ips + subnet routes)
     * </pre>
     *
     * <code>repeated string allowed_ips = 4 [deprecated = true];</code>
     * @deprecated border0.common.v1.WireGuardPeer.allowed_ips is deprecated.
     *     See messages.proto;l=76
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearAllowedIps")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, AllowedIpsProxy>.clear() {
      _builder.clearAllowedIps()
    }
    /**
     * <pre>
     * the interval for sending keepalive packets (0 means disabled)
     * </pre>
     *
     * <code>uint32 persistent_keepalive_interval_seconds = 5;</code>
     */
    public var persistentKeepaliveIntervalSeconds: kotlin.Int
      @JvmName("getPersistentKeepaliveIntervalSeconds")
      get() = _builder.getPersistentKeepaliveIntervalSeconds()
      @JvmName("setPersistentKeepaliveIntervalSeconds")
      set(value) {
        _builder.setPersistentKeepaliveIntervalSeconds(value)
      }
    /**
     * <pre>
     * the interval for sending keepalive packets (0 means disabled)
     * </pre>
     *
     * <code>uint32 persistent_keepalive_interval_seconds = 5;</code>
     */
    public fun clearPersistentKeepaliveIntervalSeconds() {
      _builder.clearPersistentKeepaliveIntervalSeconds()
    }

    /**
     * <pre>
     * endpoint for UDP peer-to-peer communication over IPv4 (public IPv4 + port as seen from the Internet)
     * </pre>
     *
     * <code>string public_udp4_endpoint = 6;</code>
     */
    public var publicUdp4Endpoint: kotlin.String
      @JvmName("getPublicUdp4Endpoint")
      get() = _builder.getPublicUdp4Endpoint()
      @JvmName("setPublicUdp4Endpoint")
      set(value) {
        _builder.setPublicUdp4Endpoint(value)
      }
    /**
     * <pre>
     * endpoint for UDP peer-to-peer communication over IPv4 (public IPv4 + port as seen from the Internet)
     * </pre>
     *
     * <code>string public_udp4_endpoint = 6;</code>
     */
    public fun clearPublicUdp4Endpoint() {
      _builder.clearPublicUdp4Endpoint()
    }

    /**
     * <pre>
     * endpoint for UDP peer-to-peer communication over IPv6 (public IPv6 + port as seen from the Internet)
     * </pre>
     *
     * <code>string public_udp6_endpoint = 7;</code>
     */
    public var publicUdp6Endpoint: kotlin.String
      @JvmName("getPublicUdp6Endpoint")
      get() = _builder.getPublicUdp6Endpoint()
      @JvmName("setPublicUdp6Endpoint")
      set(value) {
        _builder.setPublicUdp6Endpoint(value)
      }
    /**
     * <pre>
     * endpoint for UDP peer-to-peer communication over IPv6 (public IPv6 + port as seen from the Internet)
     * </pre>
     *
     * <code>string public_udp6_endpoint = 7;</code>
     */
    public fun clearPublicUdp6Endpoint() {
      _builder.clearPublicUdp6Endpoint()
    }

    /**
     * <pre>
     * client or connector
     * </pre>
     *
     * <code>.border0.common.v1.PeerType type = 8;</code>
     */
    public var type: border0.common.v1.Messages.PeerType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <pre>
     * client or connector
     * </pre>
     *
     * <code>.border0.common.v1.PeerType type = 8;</code>
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ServicesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * applicable only when PeerType == PEER_TYPE_CONNECTOR
     * </pre>
     *
     * <code>repeated .border0.common.v1.Service services = 9;</code>
     */
     public val services: com.google.protobuf.kotlin.DslList<border0.common.v1.Messages.Service, ServicesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getServicesList()
      )
    /**
     * <pre>
     * applicable only when PeerType == PEER_TYPE_CONNECTOR
     * </pre>
     *
     * <code>repeated .border0.common.v1.Service services = 9;</code>
     * @param value The services to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addServices")
    public fun com.google.protobuf.kotlin.DslList<border0.common.v1.Messages.Service, ServicesProxy>.add(value: border0.common.v1.Messages.Service) {
      _builder.addServices(value)
    }
    /**
     * <pre>
     * applicable only when PeerType == PEER_TYPE_CONNECTOR
     * </pre>
     *
     * <code>repeated .border0.common.v1.Service services = 9;</code>
     * @param value The services to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignServices")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<border0.common.v1.Messages.Service, ServicesProxy>.plusAssign(value: border0.common.v1.Messages.Service) {
      add(value)
    }
    /**
     * <pre>
     * applicable only when PeerType == PEER_TYPE_CONNECTOR
     * </pre>
     *
     * <code>repeated .border0.common.v1.Service services = 9;</code>
     * @param values The services to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllServices")
    public fun com.google.protobuf.kotlin.DslList<border0.common.v1.Messages.Service, ServicesProxy>.addAll(values: kotlin.collections.Iterable<border0.common.v1.Messages.Service>) {
      _builder.addAllServices(values)
    }
    /**
     * <pre>
     * applicable only when PeerType == PEER_TYPE_CONNECTOR
     * </pre>
     *
     * <code>repeated .border0.common.v1.Service services = 9;</code>
     * @param values The services to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllServices")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<border0.common.v1.Messages.Service, ServicesProxy>.plusAssign(values: kotlin.collections.Iterable<border0.common.v1.Messages.Service>) {
      addAll(values)
    }
    /**
     * <pre>
     * applicable only when PeerType == PEER_TYPE_CONNECTOR
     * </pre>
     *
     * <code>repeated .border0.common.v1.Service services = 9;</code>
     * @param index The index to set the value at.
     * @param value The services to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setServices")
    public operator fun com.google.protobuf.kotlin.DslList<border0.common.v1.Messages.Service, ServicesProxy>.set(index: kotlin.Int, value: border0.common.v1.Messages.Service) {
      _builder.setServices(index, value)
    }
    /**
     * <pre>
     * applicable only when PeerType == PEER_TYPE_CONNECTOR
     * </pre>
     *
     * <code>repeated .border0.common.v1.Service services = 9;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearServices")
    public fun com.google.protobuf.kotlin.DslList<border0.common.v1.Messages.Service, ServicesProxy>.clear() {
      _builder.clearServices()
    }


    /**
     * <pre>
     * device (client or connector) name
     * </pre>
     *
     * <code>string name = 10;</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <pre>
     * device (client or connector) name
     * </pre>
     *
     * <code>string name = 10;</code>
     */
    public fun clearName() {
      _builder.clearName()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun border0.common.v1.Messages.WireGuardPeer.copy(block: border0.common.v1.WireGuardPeerKt.Dsl.() -> kotlin.Unit): border0.common.v1.Messages.WireGuardPeer =
  border0.common.v1.WireGuardPeerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

