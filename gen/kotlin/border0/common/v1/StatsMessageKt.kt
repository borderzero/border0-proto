//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messages.proto

package border0.common.v1;

@kotlin.jvm.JvmName("-initializestatsMessage")
public inline fun statsMessage(block: border0.common.v1.StatsMessageKt.Dsl.() -> kotlin.Unit): border0.common.v1.Messages.StatsMessage =
  border0.common.v1.StatsMessageKt.Dsl._create(border0.common.v1.Messages.StatsMessage.newBuilder()).apply { block() }._build()
public object StatsMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: border0.common.v1.Messages.StatsMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: border0.common.v1.Messages.StatsMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): border0.common.v1.Messages.StatsMessage = _builder.build()

    /**
     * <code>.border0.common.v1.NetworkDeviceStatsMessage network_device_stats = 1;</code>
     */
    public var networkDeviceStats: border0.common.v1.Messages.NetworkDeviceStatsMessage
      @JvmName("getNetworkDeviceStats")
      get() = _builder.getNetworkDeviceStats()
      @JvmName("setNetworkDeviceStats")
      set(value) {
        _builder.setNetworkDeviceStats(value)
      }
    /**
     * <code>.border0.common.v1.NetworkDeviceStatsMessage network_device_stats = 1;</code>
     */
    public fun clearNetworkDeviceStats() {
      _builder.clearNetworkDeviceStats()
    }
    /**
     * <code>.border0.common.v1.NetworkDeviceStatsMessage network_device_stats = 1;</code>
     * @return Whether the networkDeviceStats field is set.
     */
    public fun hasNetworkDeviceStats(): kotlin.Boolean {
      return _builder.hasNetworkDeviceStats()
    }

    /**
     * <code>.border0.common.v1.SocketsStatsMessage sockets_stats = 2;</code>
     */
    public var socketsStats: border0.common.v1.Messages.SocketsStatsMessage
      @JvmName("getSocketsStats")
      get() = _builder.getSocketsStats()
      @JvmName("setSocketsStats")
      set(value) {
        _builder.setSocketsStats(value)
      }
    /**
     * <code>.border0.common.v1.SocketsStatsMessage sockets_stats = 2;</code>
     */
    public fun clearSocketsStats() {
      _builder.clearSocketsStats()
    }
    /**
     * <code>.border0.common.v1.SocketsStatsMessage sockets_stats = 2;</code>
     * @return Whether the socketsStats field is set.
     */
    public fun hasSocketsStats(): kotlin.Boolean {
      return _builder.hasSocketsStats()
    }
    public val statsMessageTypeCase: border0.common.v1.Messages.StatsMessage.StatsMessageTypeCase
      @JvmName("getStatsMessageTypeCase")
      get() = _builder.getStatsMessageTypeCase()

    public fun clearStatsMessageType() {
      _builder.clearStatsMessageType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun border0.common.v1.Messages.StatsMessage.copy(block: border0.common.v1.StatsMessageKt.Dsl.() -> kotlin.Unit): border0.common.v1.Messages.StatsMessage =
  border0.common.v1.StatsMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val border0.common.v1.Messages.StatsMessageOrBuilder.networkDeviceStatsOrNull: border0.common.v1.Messages.NetworkDeviceStatsMessage?
  get() = if (hasNetworkDeviceStats()) getNetworkDeviceStats() else null

public val border0.common.v1.Messages.StatsMessageOrBuilder.socketsStatsOrNull: border0.common.v1.Messages.SocketsStatsMessage?
  get() = if (hasSocketsStats()) getSocketsStats() else null

