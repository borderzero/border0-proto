// sets the .proto file syntax version
syntax = "proto3";

// sets the output golang package name
option go_package = "github.com/borderzero/border0-proto/device";

// sets the protobuf package name (i.e. definitions namespace)
package border0.device.v1;

// the stream (rpc) service for the Border0 api to manage devices
service DeviceManagementService {
  rpc ControlStream(stream DeviceToServerMessage) returns (stream ServerToDeviceMessage);
}

// messages from devices to the server (api)
message DeviceToServerMessage {
  oneof Message {
    AuthChallengeSolutionMessage authChallengeSolutionMessage = 1;
    EndpointUpdateMessage endpointUpdateMessage = 2;
    HeartbeatMessage heartbeatMessage = 3;
  }
}

// messages from the server (api) to devices
message ServerToDeviceMessage {
  oneof Message {
    AuthChallengeMessage authChallengeMessage = 1;
    NetworkStateMessage networkStateMessage = 2;
    HeartbeatMessage heartbeatMessage = 3;
  }
}

message AuthChallengeMessage {
  string serverPublicKey = 1;
  bytes challenge = 2;
  bytes challengeNonce = 3;
}

message AuthChallengeSolutionMessage {
  bytes solved = 1;
  bytes solvedNonce = 2;
}

message EndpointUpdateMessage {
  string endpoint = 1;             // the endpoint (IP + port) to send packets to for the peer
}

message HeartbeatMessage {}

message NetworkStateMessage {
  string cidrv4 = 1;
  string cidrv6 = 2;
  repeated WireGuardPeer peers = 3;
}

message WireGuardPeer {
  string public_key = 1;           // the public key of the peer, used for identification and encryption
  string endpoint = 2;             // the endpoint (IP + port) to send packets to for the peer
  repeated string allowed_ips = 3; // list of routes (CIDRs) to be routed through this peer (most peers will just have their own IP/32)
  uint32 persistent_keepalive = 4; // the interval (seconds) for sending keepalive packets (0 means disabled)
}
