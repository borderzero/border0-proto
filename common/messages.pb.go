// sets the .proto file syntax version

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.4
// source: messages.proto

// sets the protobuf package name (i.e. definitions namespace)

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PeerType int32

const (
	PeerType_PEER_TYPE_UNKNOWN   PeerType = 0
	PeerType_PEER_TYPE_DEVICE    PeerType = 1
	PeerType_PEER_TYPE_CONNECTOR PeerType = 2
)

// Enum value maps for PeerType.
var (
	PeerType_name = map[int32]string{
		0: "PEER_TYPE_UNKNOWN",
		1: "PEER_TYPE_DEVICE",
		2: "PEER_TYPE_CONNECTOR",
	}
	PeerType_value = map[string]int32{
		"PEER_TYPE_UNKNOWN":   0,
		"PEER_TYPE_DEVICE":    1,
		"PEER_TYPE_CONNECTOR": 2,
	}
)

func (x PeerType) Enum() *PeerType {
	p := new(PeerType)
	*p = x
	return p
}

func (x PeerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeerType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[0].Descriptor()
}

func (PeerType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[0]
}

func (x PeerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PeerType.Descriptor instead.
func (PeerType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

type ServiceType int32

const (
	ServiceType_SERVICE_TYPE_UNKNOWN       ServiceType = 0
	ServiceType_SERVICE_TYPE_HTTP          ServiceType = 1
	ServiceType_SERVICE_TYPE_SSH           ServiceType = 2
	ServiceType_SERVICE_TYPE_DATABASE      ServiceType = 3
	ServiceType_SERVICE_TYPE_TLS           ServiceType = 4
	ServiceType_SERVICE_TYPE_VNC           ServiceType = 5
	ServiceType_SERVICE_TYPE_RDP           ServiceType = 6
	ServiceType_SERVICE_TYPE_KUBERNETES    ServiceType = 7
	ServiceType_SERVICE_TYPE_SUBNET_ROUTES ServiceType = 8
)

// Enum value maps for ServiceType.
var (
	ServiceType_name = map[int32]string{
		0: "SERVICE_TYPE_UNKNOWN",
		1: "SERVICE_TYPE_HTTP",
		2: "SERVICE_TYPE_SSH",
		3: "SERVICE_TYPE_DATABASE",
		4: "SERVICE_TYPE_TLS",
		5: "SERVICE_TYPE_VNC",
		6: "SERVICE_TYPE_RDP",
		7: "SERVICE_TYPE_KUBERNETES",
		8: "SERVICE_TYPE_SUBNET_ROUTES",
	}
	ServiceType_value = map[string]int32{
		"SERVICE_TYPE_UNKNOWN":       0,
		"SERVICE_TYPE_HTTP":          1,
		"SERVICE_TYPE_SSH":           2,
		"SERVICE_TYPE_DATABASE":      3,
		"SERVICE_TYPE_TLS":           4,
		"SERVICE_TYPE_VNC":           5,
		"SERVICE_TYPE_RDP":           6,
		"SERVICE_TYPE_KUBERNETES":    7,
		"SERVICE_TYPE_SUBNET_ROUTES": 8,
	}
)

func (x ServiceType) Enum() *ServiceType {
	p := new(ServiceType)
	*p = x
	return p
}

func (x ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[1].Descriptor()
}

func (ServiceType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[1]
}

func (x ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceType.Descriptor instead.
func (ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

type DisconnectionReason int32

const (
	DisconnectionReason_UNKNOWN         DisconnectionReason = 0
	DisconnectionReason_SERVER_SHUTDOWN DisconnectionReason = 1
)

// Enum value maps for DisconnectionReason.
var (
	DisconnectionReason_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVER_SHUTDOWN",
	}
	DisconnectionReason_value = map[string]int32{
		"UNKNOWN":         0,
		"SERVER_SHUTDOWN": 1,
	}
)

func (x DisconnectionReason) Enum() *DisconnectionReason {
	p := new(DisconnectionReason)
	*p = x
	return p
}

func (x DisconnectionReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DisconnectionReason) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[2].Descriptor()
}

func (DisconnectionReason) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[2]
}

func (x DisconnectionReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DisconnectionReason.Descriptor instead.
func (DisconnectionReason) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

type DiscoveryDetailsMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Discoverable       bool   `protobuf:"varint,1,opt,name=discoverable,proto3" json:"discoverable,omitempty"`                                        // whether the peer should be returned along with the networks it's in
	EndpointPublicUdp4 string `protobuf:"bytes,2,opt,name=endpoint_public_udp4,json=endpointPublicUdp4,proto3" json:"endpoint_public_udp4,omitempty"` // the endpoint (IPv4 + port) to send packets to for the peer
	EndpointPublicUdp6 string `protobuf:"bytes,3,opt,name=endpoint_public_udp6,json=endpointPublicUdp6,proto3" json:"endpoint_public_udp6,omitempty"` // the endpoint (IPv6 + port) to send packets to for the peer
	PublicKey          string `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`                              // the public key of the peer, only used in connector
}

func (x *DiscoveryDetailsMessage) Reset() {
	*x = DiscoveryDetailsMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryDetailsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryDetailsMessage) ProtoMessage() {}

func (x *DiscoveryDetailsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryDetailsMessage.ProtoReflect.Descriptor instead.
func (*DiscoveryDetailsMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *DiscoveryDetailsMessage) GetDiscoverable() bool {
	if x != nil {
		return x.Discoverable
	}
	return false
}

func (x *DiscoveryDetailsMessage) GetEndpointPublicUdp4() string {
	if x != nil {
		return x.EndpointPublicUdp4
	}
	return ""
}

func (x *DiscoveryDetailsMessage) GetEndpointPublicUdp6() string {
	if x != nil {
		return x.EndpointPublicUdp6
	}
	return ""
}

func (x *DiscoveryDetailsMessage) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type HeartbeatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatMessage) Reset() {
	*x = HeartbeatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatMessage) ProtoMessage() {}

func (x *HeartbeatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatMessage.ProtoReflect.Descriptor instead.
func (*HeartbeatMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

type PeerOnlineMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId string         `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Peer      *WireGuardPeer `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *PeerOnlineMessage) Reset() {
	*x = PeerOnlineMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerOnlineMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerOnlineMessage) ProtoMessage() {}

func (x *PeerOnlineMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerOnlineMessage.ProtoReflect.Descriptor instead.
func (*PeerOnlineMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *PeerOnlineMessage) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *PeerOnlineMessage) GetPeer() *WireGuardPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type PeerOfflineMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId     string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	PeerPublicKey string `protobuf:"bytes,2,opt,name=peer_public_key,json=peerPublicKey,proto3" json:"peer_public_key,omitempty"`
}

func (x *PeerOfflineMessage) Reset() {
	*x = PeerOfflineMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerOfflineMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerOfflineMessage) ProtoMessage() {}

func (x *PeerOfflineMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerOfflineMessage.ProtoReflect.Descriptor instead.
func (*PeerOfflineMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *PeerOfflineMessage) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *PeerOfflineMessage) GetPeerPublicKey() string {
	if x != nil {
		return x.PeerPublicKey
	}
	return ""
}

type NetworkStateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId              string           `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	NetworkCidrV4          string           `protobuf:"bytes,2,opt,name=network_cidr_v4,json=networkCidrV4,proto3" json:"network_cidr_v4,omitempty"`
	NetworkCidrV6          string           `protobuf:"bytes,3,opt,name=network_cidr_v6,json=networkCidrV6,proto3" json:"network_cidr_v6,omitempty"`
	SelfIpv4               string           `protobuf:"bytes,4,opt,name=self_ipv4,json=selfIpv4,proto3" json:"self_ipv4,omitempty"`
	SelfIpv6               string           `protobuf:"bytes,5,opt,name=self_ipv6,json=selfIpv6,proto3" json:"self_ipv6,omitempty"`
	OnlinePeers            []*WireGuardPeer `protobuf:"bytes,6,rep,name=online_peers,json=onlinePeers,proto3" json:"online_peers,omitempty"`
	NetworkResourcesCidrV4 string           `protobuf:"bytes,7,opt,name=network_resources_cidr_v4,json=networkResourcesCidrV4,proto3" json:"network_resources_cidr_v4,omitempty"`
	NetworkResourcesCidrV6 string           `protobuf:"bytes,8,opt,name=network_resources_cidr_v6,json=networkResourcesCidrV6,proto3" json:"network_resources_cidr_v6,omitempty"`
}

func (x *NetworkStateMessage) Reset() {
	*x = NetworkStateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkStateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStateMessage) ProtoMessage() {}

func (x *NetworkStateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStateMessage.ProtoReflect.Descriptor instead.
func (*NetworkStateMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *NetworkStateMessage) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *NetworkStateMessage) GetNetworkCidrV4() string {
	if x != nil {
		return x.NetworkCidrV4
	}
	return ""
}

func (x *NetworkStateMessage) GetNetworkCidrV6() string {
	if x != nil {
		return x.NetworkCidrV6
	}
	return ""
}

func (x *NetworkStateMessage) GetSelfIpv4() string {
	if x != nil {
		return x.SelfIpv4
	}
	return ""
}

func (x *NetworkStateMessage) GetSelfIpv6() string {
	if x != nil {
		return x.SelfIpv6
	}
	return ""
}

func (x *NetworkStateMessage) GetOnlinePeers() []*WireGuardPeer {
	if x != nil {
		return x.OnlinePeers
	}
	return nil
}

func (x *NetworkStateMessage) GetNetworkResourcesCidrV4() string {
	if x != nil {
		return x.NetworkResourcesCidrV4
	}
	return ""
}

func (x *NetworkStateMessage) GetNetworkResourcesCidrV6() string {
	if x != nil {
		return x.NetworkResourcesCidrV6
	}
	return ""
}

type WireGuardPeer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"` // the public key of the peer, used for identification and encryption
	Ipv4      string `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`                            // the peer's (private) IPv4 address in the WireGuard network
	Ipv6      string `protobuf:"bytes,3,opt,name=ipv6,proto3" json:"ipv6,omitempty"`                            // the peer's (private) IPv6 address in the WireGuard network
	// Deprecated: Marked as deprecated in messages.proto.
	AllowedIps                         []string          `protobuf:"bytes,4,rep,name=allowed_ips,json=allowedIps,proto3" json:"allowed_ips,omitempty"`                                                                              // list of routes (CIDRs) to be routed through this peer (most peers will just have their own IP/32). (this field is now deprecated in favor of building the allowed_ips list from ipv4 + ipv6 + service ips + subnet routes)
	PersistentKeepaliveIntervalSeconds uint32            `protobuf:"varint,5,opt,name=persistent_keepalive_interval_seconds,json=persistentKeepaliveIntervalSeconds,proto3" json:"persistent_keepalive_interval_seconds,omitempty"` // the interval for sending keepalive packets (0 means disabled)
	PublicUdp4Endpoint                 string            `protobuf:"bytes,6,opt,name=public_udp4_endpoint,json=publicUdp4Endpoint,proto3" json:"public_udp4_endpoint,omitempty"`                                                    // endpoint for UDP peer-to-peer communication over IPv4 (public IPv4 + port as seen from the Internet)
	PublicUdp6Endpoint                 string            `protobuf:"bytes,7,opt,name=public_udp6_endpoint,json=publicUdp6Endpoint,proto3" json:"public_udp6_endpoint,omitempty"`                                                    // endpoint for UDP peer-to-peer communication over IPv6 (public IPv6 + port as seen from the Internet)
	Type                               PeerType          `protobuf:"varint,8,opt,name=type,proto3,enum=border0.common.v1.PeerType" json:"type,omitempty"`                                                                           // client or connector
	DeviceDetails                      *DeviceDetails    `protobuf:"bytes,9,opt,name=device_details,json=deviceDetails,proto3" json:"device_details,omitempty"`                                                                     // details about the wireguard peer's underlying device
	ConnectorDetails                   *ConnectorDetails `protobuf:"bytes,10,opt,name=connector_details,json=connectorDetails,proto3" json:"connector_details,omitempty"`                                                           // applicable only when PeerType == PEER_TYPE_CONNECTOR
}

func (x *WireGuardPeer) Reset() {
	*x = WireGuardPeer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireGuardPeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireGuardPeer) ProtoMessage() {}

func (x *WireGuardPeer) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireGuardPeer.ProtoReflect.Descriptor instead.
func (*WireGuardPeer) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *WireGuardPeer) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *WireGuardPeer) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *WireGuardPeer) GetIpv6() string {
	if x != nil {
		return x.Ipv6
	}
	return ""
}

// Deprecated: Marked as deprecated in messages.proto.
func (x *WireGuardPeer) GetAllowedIps() []string {
	if x != nil {
		return x.AllowedIps
	}
	return nil
}

func (x *WireGuardPeer) GetPersistentKeepaliveIntervalSeconds() uint32 {
	if x != nil {
		return x.PersistentKeepaliveIntervalSeconds
	}
	return 0
}

func (x *WireGuardPeer) GetPublicUdp4Endpoint() string {
	if x != nil {
		return x.PublicUdp4Endpoint
	}
	return ""
}

func (x *WireGuardPeer) GetPublicUdp6Endpoint() string {
	if x != nil {
		return x.PublicUdp6Endpoint
	}
	return ""
}

func (x *WireGuardPeer) GetType() PeerType {
	if x != nil {
		return x.Type
	}
	return PeerType_PEER_TYPE_UNKNOWN
}

func (x *WireGuardPeer) GetDeviceDetails() *DeviceDetails {
	if x != nil {
		return x.DeviceDetails
	}
	return nil
}

func (x *WireGuardPeer) GetConnectorDetails() *ConnectorDetails {
	if x != nil {
		return x.ConnectorDetails
	}
	return nil
}

type DeviceDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *DeviceDetails) Reset() {
	*x = DeviceDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceDetails) ProtoMessage() {}

func (x *DeviceDetails) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceDetails.ProtoReflect.Descriptor instead.
func (*DeviceDetails) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *DeviceDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceDetails) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ConnectorDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid     string     `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Services []*Service `protobuf:"bytes,3,rep,name=services,proto3" json:"services,omitempty"`
}

func (x *ConnectorDetails) Reset() {
	*x = ConnectorDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorDetails) ProtoMessage() {}

func (x *ConnectorDetails) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorDetails.ProtoReflect.Descriptor instead.
func (*ConnectorDetails) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *ConnectorDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectorDetails) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ConnectorDetails) GetServices() []*Service {
	if x != nil {
		return x.Services
	}
	return nil
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type         ServiceType `protobuf:"varint,2,opt,name=type,proto3,enum=border0.common.v1.ServiceType" json:"type,omitempty"`
	Ipv4         string      `protobuf:"bytes,3,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6         string      `protobuf:"bytes,4,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	SubnetRoutes []string    `protobuf:"bytes,5,rep,name=subnet_routes,json=subnetRoutes,proto3" json:"subnet_routes,omitempty"` // applicable only to services of type SUBNET_ROUTES
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service) GetType() ServiceType {
	if x != nil {
		return x.Type
	}
	return ServiceType_SERVICE_TYPE_UNKNOWN
}

func (x *Service) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *Service) GetIpv6() string {
	if x != nil {
		return x.Ipv6
	}
	return ""
}

func (x *Service) GetSubnetRoutes() []string {
	if x != nil {
		return x.SubnetRoutes
	}
	return nil
}

type DisconnectMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason DisconnectionReason `protobuf:"varint,1,opt,name=reason,proto3,enum=border0.common.v1.DisconnectionReason" json:"reason,omitempty"`
}

func (x *DisconnectMessage) Reset() {
	*x = DisconnectMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectMessage) ProtoMessage() {}

func (x *DisconnectMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectMessage.ProtoReflect.Descriptor instead.
func (*DisconnectMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (x *DisconnectMessage) GetReason() DisconnectionReason {
	if x != nil {
		return x.Reason
	}
	return DisconnectionReason_UNKNOWN
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x11, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x22, 0xc0, 0x01, 0x0a, 0x17, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x75, 0x64, 0x70, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x55, 0x64, 0x70, 0x34, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x75, 0x64, 0x70, 0x36, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x55, 0x64, 0x70, 0x36, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x12, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x68, 0x0a, 0x11, 0x50, 0x65,
	0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x69, 0x72, 0x65, 0x47, 0x75, 0x61, 0x72, 0x64, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04,
	0x70, 0x65, 0x65, 0x72, 0x22, 0x5b, 0x0a, 0x12, 0x50, 0x65, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x22, 0xf9, 0x02, 0x0a, 0x13, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x5f, 0x76, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x69, 0x64, 0x72, 0x56, 0x34,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x69, 0x64, 0x72,
	0x5f, 0x76, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x43, 0x69, 0x64, 0x72, 0x56, 0x36, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x66,
	0x5f, 0x69, 0x70, 0x76, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c,
	0x66, 0x49, 0x70, 0x76, 0x34, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x70,
	0x76, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x49, 0x70,
	0x76, 0x36, 0x12, 0x43, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x65, 0x65,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x72,
	0x65, 0x47, 0x75, 0x61, 0x72, 0x64, 0x50, 0x65, 0x65, 0x72, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x63, 0x69, 0x64,
	0x72, 0x5f, 0x76, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x43, 0x69, 0x64, 0x72,
	0x56, 0x34, 0x12, 0x39, 0x0a, 0x19, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x63, 0x69, 0x64, 0x72, 0x5f, 0x76, 0x36, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x43, 0x69, 0x64, 0x72, 0x56, 0x36, 0x22, 0xfe, 0x03,
	0x0a, 0x0d, 0x57, 0x69, 0x72, 0x65, 0x47, 0x75, 0x61, 0x72, 0x64, 0x50, 0x65, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x70, 0x76, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70,
	0x76, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x70, 0x76, 0x36, 0x12, 0x23, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x5f, 0x69, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x70, 0x73, 0x12, 0x51, 0x0a, 0x25, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c,
	0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x22, 0x70, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x30,
	0x0a, 0x14, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x75, 0x64, 0x70, 0x34, 0x5f, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x55, 0x64, 0x70, 0x34, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x30, 0x0a, 0x14, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x75, 0x64, 0x70, 0x36, 0x5f,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x64, 0x70, 0x36, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x50, 0x0a, 0x11,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x10, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x37,
	0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x72, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x30, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x07,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x62, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x70, 0x76, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x36, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x36, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x11,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3e, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x26, 0x2e, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x2a, 0x50, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x45,
	0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f,
	0x52, 0x10, 0x02, 0x2a, 0xee, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x54,
	0x54, 0x50, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x53, 0x48, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x42,
	0x41, 0x53, 0x45, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x4c, 0x53, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x4e, 0x43, 0x10,
	0x05, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x52, 0x44, 0x50, 0x10, 0x06, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x45, 0x52, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4b, 0x55, 0x42, 0x45, 0x52, 0x4e, 0x45, 0x54,
	0x45, 0x53, 0x10, 0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x55, 0x42, 0x4e, 0x45, 0x54, 0x5f, 0x52, 0x4f, 0x55, 0x54,
	0x45, 0x53, 0x10, 0x08, 0x2a, 0x37, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x52, 0x56,
	0x45, 0x52, 0x5f, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x42, 0x2c, 0x5a,
	0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x7a, 0x65, 0x72, 0x6f, 0x2f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x30, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_messages_proto_goTypes = []any{
	(PeerType)(0),                   // 0: border0.common.v1.PeerType
	(ServiceType)(0),                // 1: border0.common.v1.ServiceType
	(DisconnectionReason)(0),        // 2: border0.common.v1.DisconnectionReason
	(*DiscoveryDetailsMessage)(nil), // 3: border0.common.v1.DiscoveryDetailsMessage
	(*HeartbeatMessage)(nil),        // 4: border0.common.v1.HeartbeatMessage
	(*PeerOnlineMessage)(nil),       // 5: border0.common.v1.PeerOnlineMessage
	(*PeerOfflineMessage)(nil),      // 6: border0.common.v1.PeerOfflineMessage
	(*NetworkStateMessage)(nil),     // 7: border0.common.v1.NetworkStateMessage
	(*WireGuardPeer)(nil),           // 8: border0.common.v1.WireGuardPeer
	(*DeviceDetails)(nil),           // 9: border0.common.v1.DeviceDetails
	(*ConnectorDetails)(nil),        // 10: border0.common.v1.ConnectorDetails
	(*Service)(nil),                 // 11: border0.common.v1.Service
	(*DisconnectMessage)(nil),       // 12: border0.common.v1.DisconnectMessage
}
var file_messages_proto_depIdxs = []int32{
	8,  // 0: border0.common.v1.PeerOnlineMessage.peer:type_name -> border0.common.v1.WireGuardPeer
	8,  // 1: border0.common.v1.NetworkStateMessage.online_peers:type_name -> border0.common.v1.WireGuardPeer
	0,  // 2: border0.common.v1.WireGuardPeer.type:type_name -> border0.common.v1.PeerType
	9,  // 3: border0.common.v1.WireGuardPeer.device_details:type_name -> border0.common.v1.DeviceDetails
	10, // 4: border0.common.v1.WireGuardPeer.connector_details:type_name -> border0.common.v1.ConnectorDetails
	11, // 5: border0.common.v1.ConnectorDetails.services:type_name -> border0.common.v1.Service
	1,  // 6: border0.common.v1.Service.type:type_name -> border0.common.v1.ServiceType
	2,  // 7: border0.common.v1.DisconnectMessage.reason:type_name -> border0.common.v1.DisconnectionReason
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DiscoveryDetailsMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*HeartbeatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PeerOnlineMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PeerOfflineMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkStateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*WireGuardPeer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeviceDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ConnectorDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DisconnectMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		EnumInfos:         file_messages_proto_enumTypes,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
